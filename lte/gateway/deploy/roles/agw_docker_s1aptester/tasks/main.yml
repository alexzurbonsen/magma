---
- name: Verify eth0, eth1, eth2 exist
  assert:
    that:
      - "{{ ansible_facts['eth0'] is defined }}"
      - "{{ ansible_facts['eth1'] is defined }}"
      - "{{ ansible_facts['eth2'] is defined }}"
    fail_msg: "eth0, eth1, eth2 interfaces must exist"

- name: Verify eth1 address
  assert:
    that: ansible_facts['eth1']['ipv4']['address']  == eth1_address
    fail_msg: "eth1 must have address {{ eth1_address }}"

- name: Verify eth2 address
  assert:
    that: ansible_facts['eth2']['ipv4']['address']  == eth2_address
    fail_msg: "eth1 must have address {{ eth2_address }}"

- name: Download Docker install script
  get_url:
    url: https://get.docker.com
    dest: ~/get-docker.sh
    mode: '0740'
  register: get_docker

- name: Download docker-compose
  get_url:
    url: 'https://github.com/docker/compose/releases/download/v{{docker_compose_version}}/docker-compose-linux-x86_64'
    dest: /usr/local/bin/docker-compose
    mode: '0740'

- name: Install docker
  shell: ~/get-docker.sh
  when: get_docker.changed

- name: Git checkout
  git:
    repo: '{{ magma_repo}}'
    dest: /opt/magma
    version: '{{ magma_version }}'
  when: get_docker.changed

- name: Add docker registry to .env
  lineinfile:
    path: /opt/magma/lte/gateway/docker/.env
    regexp: '^DOCKER_REGISTRY='
    line: "DOCKER_REGISTRY={{ docker_registry }}"
  when: docker_registry is defined

- name: "Build {{ docker_application }} image"
  shell:
    cmd: "docker-compose -f docker-compose.yaml -f s1ap/docker-compose.override.yaml build {{ docker_application }}"
    chdir: /opt/magma/lte/gateway/docker
  when: docker_registry is not defined

- name: "Start {{ docker_application }} container"
  shell:
    cmd: "docker-compose --env-file .env -f s1ap/docker-compose.s1ap.yaml up -d {{ docker_application }}"
    chdir: /opt/magma/lte/gateway/docker
